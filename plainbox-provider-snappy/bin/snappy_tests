#!/usr/bin/env python3
# Copyright 2015 Canonical Ltd.
# All rights reserved.
#
# Written by:
#    Authors: Jonathan Cave <jonathan.cave@canonical.com>


import subprocess

from guacamole import Command


class SnappyList(Command):

    """snappy list sub-command."""

    def invoked(self, ctx):
        """Snappy list should show the ubuntu-core package is installed."""
        cmd = ['snap', 'list']
        output = subprocess.check_output(cmd)
        if 'core' not in str(output):
            print("String not found")
            return 1


class SnappySearch(Command):

    """snappy search sub-command."""

    def invoked(self, ctx):
        """Snappy search for 'hello'."""
        cmd = ['snap', 'find', 'hello']
        output = subprocess.check_output(cmd)
        if 'hello-world' not in str(output):
            print("String not found")
            return 1


class SnappyInstall(Command):

    """snappy install sub-command."""

    def invoked(self, ctx):
        """Test install of test-snapd-tools snap."""
        cmd = ['sudo', 'snap', 'install', 'test-snapd-tools']
        subprocess.check_call(cmd)
        cmd = ['snap', 'list']
        output = subprocess.check_output(cmd)
        if 'test-snapd-tools' not in str(output):
            print("Didn't find package name")
            return 1


class SnappyRemove(Command):

    """snappy remove sub-command."""

    def invoked(self, ctx):
        """Test remove of test-snapd-tools snap."""
        cmd = ['sudo', 'snap', 'remove', 'test-snapd-tools']
        subprocess.check_call(cmd)
        cmd = ['snap', 'list']
        output = subprocess.check_output(cmd)
        if 'test-snapd-tools' in str(output):
            print("Found package name")
            return 1


class Snappy(Command):

    """Fake snappy like command."""

    sub_commands = (
        ('list', SnappyList),
        ('search', SnappySearch),
        ('install', SnappyInstall),
        ('remove', SnappyRemove),
    )

if __name__ == '__main__':
    Snappy().main()
