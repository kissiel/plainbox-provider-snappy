id: snappy/snap-list
_summary: Test that the snap list command is working.
_purpose: If snap list command is working then should at least find the
 ubuntu-core package.
plugin: shell
command: snappy_tests list
category_id: snappy
estimated_duration: 10s
flags: preserve-locale

id: snappy/snap-search
_summary: Test that the snap find command is working.
_purpose: If snap find command is working then should find hello-world
 in the store.
plugin: shell
command: snappy_tests search
category_id: snappy
estimated_duration: 10s
flags: preserve-locale

id: snappy/snap-install
_summary: Test the snap install command is able to install test-snapd-tools snap.
_purpose:
 The store should contain the basic test-snapd-tools snap makes sure this
 can be downloaded and installed on the system.
plugin: shell
command: snappy_tests install
category_id: snappy
estimated_duration: 10s
flags: preserve-locale

id: snappy/snap-remove
_summary: Test the snap remove command is able to remove the test-snapd-tools snap.
_purpose: After having installed the test-snapd-tools snap, check it can removed.
plugin: shell
command: snappy_tests remove
category_id: snappy
estimated_duration: 10s
depends: snappy/snap-install
flags: preserve-locale

id: snappy/snap-refresh
_summary: Test the snap refresh command is able to update the hello snap.
_purpose:
 Check hello snap can be refreshed by snap refresh
_steps:
 1. Install
    snap install hello
 2. Check version number
    snap list hello
 3. Update
    snap refresh hello --beta
 4. Check version number
    snap list hello
_verification:
 Check hello version is newer using the beta channel
plugin: manual
after: snappy/snap-remove
category_id: snappy
estimated_duration: 60

id: snappy/snap-revert
_summary: Test the snap revert command is able to revert the hello snap.
_purpose:
 Check hello snap can be reverted by snap revert
_steps:
 1. Revert
    snap revert hello
 2. Check version number
    snap list hello
_verification:
 Check hello version is back to its stable version
plugin: manual
depends: snappy/snap-refresh
category_id: snappy
estimated_duration: 60

id: snappy/snap-reupdate
_summary: Test the snap refresh command is able to refresh again the hello snap.
_purpose:
 Check hello snap can be refreshed after removal of the blacklisted revision
_steps:
 1. Remove reverted version (and associated data)
    snap remove hello --revision=<beta_revision>
 2. Reupdate
    snap refresh hello --beta
 3. Check version number
    snap list hello
_verification:
 Check hello version is again the one from the beta channel
plugin: manual
depends: snappy/snap-revert
category_id: snappy
estimated_duration: 60

id: snappy/os-refresh
_summary: Refresh the system using the snap tool
_purpose:
 Check "core" can be refreshed by snap refresh
_steps:
 1. Check version number
    snap list core
 2. Update
    snap refresh core --edge
 3. Reboot the system and log in
    sudo reboot
 4. Check version number
    snap list core
_verification:
 Check core version is newer using the edge channel
plugin: manual
after: snappy/snap-reupdate
category_id: snappy
estimated_duration: 400

id: snappy/os-revert
_summary: Rollback system update using the snap tool
_purpose:
 Check core can be reverted by snap revert
_steps:
 1. Check version number
    snap list core
 2. Revert
    snap revert core
 3. Reboot the system and log in
    sudo reboot
 4. Check version number
    snap list core
_verification:
 Check core version is back to its stable version
plugin: manual
depends: snappy/os-refresh
category_id: snappy
estimated_duration: 400

id: snappy/os-fail-boot
_summary: Automatically rollback after failed boot after upgrade
_purpose:
 Check system will rollback to original core snap if failed to boot the updated one
_steps:
 1. Remove reverted version (and associated data)
    snap remove core --revision=<edge_revision>
 2. Check that the edge revision is back in the refresh list
    snap refresh --list core
 3. Update
    snap refresh core --edge
 4. Modify the GRUB Environment Block to simulate a failed boot
    sudo /usr/bin/grub-editenv /boot/grub/grubenv set snap_mode=trying
 5. Reboot the system and log in
    sudo reboot
 6. Check version number
    snap list core
_verification:
 Check system is currently booting the stable core version
plugin: manual
category_id: snappy
depends: snappy/os-revert
estimated_duration: 500

id: snappy/sshd
_summary: SSH is enabled and operational
_purpose:
 Check if user can access the system through ssh from other machine
_steps:
 1. Execute following command on other machine in same network
     ssh [user id]@[ip address of the testing system]
 2. Enter password to login
_verification:
 Can log into system through ssh from other machine
plugin: manual
category_id: snappy
estimated_duration: 120

id: snappy/snapweb
_summary: snapweb is enabled
_purpose:
 Check user can access snapweb from other machine
_steps:
 1. Connect Ethernet cable before boot
 2. Boot into system
 3. Browse following url with browser from other machine in same network
     http://[ip address of the testing system]:4200
_verification:
 Can access snapweb interface
plugin: manual
category_id: snappy
estimated_duration: 60

id: snappy/snapweb-search
_summary: User is able to search the store from snapweb interface
_purpose:
 Check that the user is able to search the store for snaps to install from the
 snapweb interface
_steps:
 1. Browse following url with browser from other machine in same network
     http://[ip address of the testing system]:4200
 2. Click on the store link
 3. Use the search box to find snaps
_verification:
 A list of snaps available for install is presented.
plugin: manual
category_id: snappy
estimated_duration: 30
depends: snappy/snapweb

id: snappy/snapweb-install
_summary: User is able to install a snap using snapweb interface
_purpose:
 Check that the user is able to install a snap from the snapweb interface
_steps:
 1. Click on the "Install" button for a snap in the search ouput.
 2. Check the button changes to "Remove"
_verification:
 Use the command line to list installed snaps. Verify the new snap is installed.
plugin: manual
category_id: snappy
estimated_duration: 30
depends: snappy/snapweb-search
