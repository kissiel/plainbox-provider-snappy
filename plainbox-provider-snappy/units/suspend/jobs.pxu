id: suspend/suspend-manual
_summary: System can be suspended
_purpose:
 Check the system can suspend successfully
_steps:
 1. Execute the following command:
  sudo systemctl suspend
_verification:
 System suspends successfully
plugin: manual
category_id: power
estimated_duration: 300

id: suspend/audio-after-suspend/headphone
_summary: Headphones work (after suspend)
_purpose:
 Check that headphones work after suspend
_steps:
 1. Plug in headset to headset port
 2. Execute the following command:
  alsamixer
 3. Use arrow key to adjust volume, m key to mute/unmute
 4. Make sure all channels are not muted and have an appropriate volume
 5. Press q to exit alsamixer
 6. Suspend the device
 7. Resume the device
 6. Execute following command:
  arecord | aplay
 7. Speak in to microphone on headset
_verification:
 Verify that your voice is reproduced through the headphones clearly
plugin: manual
category_id: audio
estimated_duration: 10

id: suspend/audio-after-suspend/microphone
_summary: External microphone works (after suspend)
_purpose:
 Check that an external microphone works after suspend
_steps:
 1. Plug headset to headset port
 2. Execute following command:
  alsamixer
 3. Use arrow key to adjust volume, m key to mute/unmute
 4. Make sure all channels are not muted and have an appropriate volume
 5. Press q to exit alsamixer
 6. Suspend the device
 7. Resume the device
 8. Execute following command:
  arecord | aplay
 9. Speak in to microphone on headset
_verification:
 Verify that your voice is reproduced through the headphones clearly
plugin: manual
category_id: audio
estimated_duration: 10

id: suspend/bluetooth-after-suspend/hid
_summary: After suspend, bluetooth keyboard works
_purpose:
 Check a bluetooth input device works after suspending the system. Given Ubuntu
 is CLI only, this implies a keyboard test.
_steps:
 1. Scan nearby devices:
     hcitool scan
 2. Pair a bluetooth input device
     bluez-simple-agent hci0 [MAC address of bluetooth input device]
 3. Set paired input device workable
     sudo bluez-test-input connect [MAC address of bluetooth input device]
 4. Suspend the device
 5. Resume the device
_verification:
 Can input from input device
plugin: manual
category_id: bluetooth
estimated_duration: 10

id: suspend/ethernet/eth0/after-suspend/ping
_summary: After suspend, can ping another machine over first Ethernet port
_purpose:
 Check Ethernet works after suspend by pinging another machine
_steps:
 1. Make sure Ethernet cable is connected and can access internet
 2. Suspend the device
 3. Resume the device
 4. ping -I eth0 google.com
_verification:
 Can successfully get ping responses from google.com
plugin: manual
category_id: ethernet
estimated_duration: 10

id: suspend/ethernet/eth1/after-suspend/ping
_summary: After suspend, can ping another machine over second Ethernet port
_purpose:
 Check Ethernet works after suspend by pinging another machine
_steps:
 1. Make sure Ethernet cable is connected and can access internet
 2. Suspend the device
 3. Resume the device
 4. ping -I eth1 google.com
_verification:
 Can successfully get ping responses from google.com
plugin: manual
category_id: ethernet
estimated_duration: 10

id: suspend/led-after-suspend/power
_summary: After suspend, Power LED behaves correctly
_purpose:
 Check power LED is on when system is powered on after suspend
_steps:
 1. Suspend the device
 2. Resume the device
 3. Check power led when system is powered on
_verification:
 Power led is on when system is powered on
plugin: manual
category_id: led
estimated_duration: 10

id: suspend/monitor-after-suspend/dvi
_summary: After suspend, a Monitor works when connected by DVI
_purpose:
 Check output to display through DVI port after suspend
_steps:
 1. Connect display to DVI port
 2. Check the display
 3. Suspend the device
 4. Resume the device
_verification:
 Output to display works
plugin: manual
category_id: display
estimated_duration: 10

id: suspend/monitor-after-suspend/hdmi
_summary: After suspend , a Monitor works when connected by HDMI
_purpose:
 Check output to display through HDMI port after suspend
_steps:
 1. Connect display to HDMI port
 2. Check the display
 3. Suspend the device
 4. Resume the device
_verification:
 Output to display works
plugin: manual
category_id: display
estimated_duration: 10

id: suspend/monitor-after-suspend/dvi-to-vga
_summary: After suspend, a Monitor works when connected by DVI-to-VGA
_purpose:
 Check output to display through VGA adaptor on DVI port after suspend
_steps:
 1. Connect display to VGA adaptor on DVI port
 2. Check the display
 3. Suspend the device
 4. Resume the device
_verification:
 Output to display works
plugin: manual
category_id: display
estimated_duration: 10

id: suspend/monitor-after-suspend/hdmi-to-vga
_summary: After suspend, a Monitor works when connected by HDMI-to-VGA
_purpose:
 Check output to display through VGA adaptor on HDMI port after suspend
_steps:
 1. Connect display to VGA adaptor on HDMI port
 2. Check the display
 3. Suspend the device
 4. Resume the device
_verification:
 Output to display works
plugin: manual
category_id: display
estimated_duration: 10

id: suspend/serial-after-suspend/rs232-console
_summary: After suspend, the serial debugging console is enabled and operational
_purpose:
 Check user can still access the test machine through serial port from another
 machine
_steps:
 1. Connect USB to db9 null modem adapter cable to serial port of test machine
 2. Connect the cable to USB port of another ubuntu machine (client)
 3. Install screen on client (if not done in Prerequisite)
 4. Execute following command on client:
  sudo screen /dev/ttyUSB0
 5. Start getty service on test machine:
  sudo systemctl start getty@[rs232 device, ex. /dev/ttyS0].service
 6. Log into the test machine from terminal on client
 7. Execute following command in screen on client:
  sudo systemctl suspend
 8. Resume the test machine
 9. Try to run some commands in terminal on client
_verification:
 Can still run commands in terminal on client after suspend
plugin: manual
category_id: serial
estimated_duration: 600

id: suspend/usb-after-suspend/hid
_summary: After suspend, USB keyboard works
_purpose:
 Check USB input device works after suspend
_steps:
 1. Connect USB keyboard
 2. Input some characters with the USB keyboard
 3. Suspend the device
 4. Wake the device
 5. Input some characters with the USB keyboard
_verification:
 Confirm the characters are displayed correctly
plugin: manual
category_id: usb2
estimated_duration: 10

id: suspend/usb-after-suspend/insert
_summary: After suspend, USB storage device insertion detected
_purpose:
 Check system can detect USB storage when inserted after suspend
_steps:
 1. Press continue
 2. Connect USB storage device
_verification:
 Can find new USB storage device messages in /var/log/syslog
plugin: user-interact
user: root
command: run_watcher.py insertion usb2
category_id: usb2
estimated_duration: 10

id: suspend/usb-after-suspend/storage-automated
_summary: After suspend, USB storage device read & write works
_purpose:
 Check system can read/write to USB storage correctly after suspend
_steps:
 1. This task is fully automatic and need USB insertion test was applied first.
_verification:
 This task is fully automatic and will verify the result for you.
plugin: shell
user: root
command: usb_read_write
category_id: usb2
estimated_duration: 10

id: suspend/usb-after-suspend/remove
_summary: After suspend, USB storage removal works
_purpose:
 Check system can detect removal of a USB storage device after suspend
_steps:
 1. Press continue
 2. Disconnect USB storage device
_verification:
 Can find USB storage device removed messages in /var/log/syslog
plugin: user-interact
user: root
command: run_watcher.py removal usb2
category_id: usb2
estimated_duration: 10

id: suspend/usb3-after-suspend/insert
_summary: After suspend, USB3 storage device insertion detected
_purpose:
 Check system can detect insertion of a USB3 storage device after suspend
_steps:
 1. Press continue
 2. Connect USB3 storage device
_verification:
 Can find new USB3 storage device messages in /var/log/syslog
plugin: user-interact
user: root
command: run_watcher.py insertion usb3
category_id: usb3
estimated_duration: 10

id: suspend/usb3-after-suspend/storage-automated
_summary: After suspend, USB3 storage device read & write works
_purpose:
 Check system can read/write to USB3 storage devices correctly after suspend
_steps:
 1. This task is fully automatic and need USB3 insertion test was applied first.
_verification:
 This task is fully automatic and will verify the result for you.
plugin: shell
user: root
command: usb_read_write
category_id: usb3
estimated_duration: 10

id: suspend/usb3-after-suspend/remove
_summary: After suspend, USB3 storage removal works
_purpose:
 Check system can detect USB3 storage removal after suspend
_steps:
 1. Press continue
 2. Disconnect USB3 storage device
_verification:
 Can find USB3 storage device removed messages in /var/log/syslog
plugin: user-interact
user: root
command: run_watcher.py removal usb3
category_id: usb3
estimated_duration: 10

id: suspend/wireless-after-suspend/wireless_scanning
_summary: After suspend, System can discover Wi-Fi networks
_purpose:
 Check system can find a wireless network AP nearby after suspend
_steps:
 1. sudo iw dev mlan0 scan
 2. Suspend the device
 3. Resume the device
 4. sudo iw dev mlan0 scan
_verification:
 In step 4, can see nearby wireless network AP
plugin: manual
category_id: wifi
estimated_duration: 10

id: suspend/wireless-after-suspend/wireless_connection_open_ac
_summary: After suspend, system can connect to unencrypted 802.11ac Wi-Fi network
_purpose:
 Check system can connect to insecure 802.11ac AP after suspend
_steps:
 1. Remove all wireless configuration in /etc/network/interfaces and /etc/network/interfaces.d
 2. Commence the test
_verification:
 If there's "Connection test passed" message in result, mark the test as passed.
plugin: user-interact
command: wifi_client_test -i $WIFI_INTERFACE -s $OPEN_AC_SSID
environ: WIFI_INTERFACE OPEN_AC_SSID
user: root
category_id: wifi
estimated_duration: 90
flags: preserve-locale

id: suspend/wireless-after-suspend/wireless_connection_open_bg
_summary: After suspend, system can connect to unencrypted 802.11b/g Wi-Fi network
_purpose:
 Check system can connect to insecure 802.11b/g AP after suspend
_steps:
 1. Remove all wireless configuration in /etc/network/interfaces and /etc/network/interfaces.d
 2. Commence the test
_verification:
 If there's "Connection test passed" message in result, mark the test as passed.
plugin: user-interact
command: wifi_client_test -i $WIFI_INTERFACE -s $OPEN_BG_SSID
environ: WIFI_INTERFACE OPEN_BG_SSID
user: root
category_id: wifi
estimated_duration: 90
flags: preserve-locale

id: suspend/wireless-after-suspend/wireless_connection_open_n
_summary: After suspend, system can connect to unencrypted 802.11n Wi-Fi network
_purpose:
 Check system can connect to insecure 802.11n AP after suspend
_steps:
 1. Remove all wireless configuration in /etc/network/interfaces and /etc/network/interfaces.d
 2. Commence the test
_verification:
 If there's "Connection test passed" message in result, mark the test as passed.
plugin: user-interact
command: wifi_client_test -i $WIFI_INTERFACE -s $OPEN_N_SSID
environ: WIFI_INTERFACE OPEN_N_SSID
user: root
category_id: wifi
estimated_duration: 90
flags: preserve-locale

id: suspend/wireless-after-suspend/wireless_connection_wpa_ac
_summary: After suspend, system can connect to WPA-encrypted 802.11ac Wi-Fi network
_purpose:
 Check system can connect to 802.11ac AP with wpa security after suspend
_steps:
 1. Remove all wireless configuration in /etc/network/interfaces and /etc/network/interfaces.d
 2. Commence the test
_verification:
 If there's "Connection test passed" message in result, mark the test as passed.
plugin: user-interact
command: wifi_client_test -i $WIFI_INTERFACE -s $WPA_AC_SSID -k $WPA_AC_PSK
environ: WIFI_INTERFACE WPA_AC_SSID WPA_AC_PASK
user: root
category_id: wifi
estimated_duration: 90
flags: preserve-locale

id: suspend/wireless-after-suspend/wireless_connection_wpa_bg
_summary: After suspend, system can connect to WPA-encrypted 802.11b/g Wi-Fi network
_purpose:
 Check system can connect to 802.11b/g AP with wpa security after suspend
_steps:
 1. Remove all wireless configuration in /etc/network/interfaces and /etc/network/interfaces.d
 2. Commence the test
_verification:
 If there's "Connection test passed" message in result, mark the test as passed.
plugin: user-interact
command: wifi_client_test -i $WIFI_INTERFACE -s $WPA_BG_SSID -k $WPA_BG_PSK
environ: WIFI_INTERFACE WPA_BG_SSID WPA_BG_PASK
user: root
category_id: wifi
estimated_duration: 90
flags: preserve-locale

id: suspend/wireless-after-suspend/wireless_connection_wpa_n
_summary: After suspend, system can connect to WPA-encrypted 802.11n Wi-Fi network
_purpose:
 Check system can connect to 802.11n AP with wpa security after suspend
_steps:
 1. Remove all wireless configuration in /etc/network/interfaces and /etc/network/interfaces.d
 2. Commence the test
_verification:
 If there's "Connection test passed" message in result, mark the test as passed.
plugin: user-interact
command: wifi_client_test -i $WIFI_INTERFACE -s $WPA_N_SSID -k $WPA_N_PSK
environ: WIFI_INTERFACE WPA_N_SSID WPA_N_PASK
user: root
category_id: wifi
estimated_duration: 90
flags: preserve-locale
